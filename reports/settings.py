"""
Django settings for reports project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

import environ


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
environ.Env.read_env(os.path.join(Path(__file__).resolve().parent, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--lfbjn3qgosinvh0ls*wb*#72ckmd4-9ozyt*^=6=_w+ah1&qg'
# SECRET_KEY = os.environ.get("SECRET_KEY")

CSRF_TRUSTED_ORIGINS = [
    'http://51.250.113.32',
    'http://51.250.45.169',
    # 'http://zetictest.ru',
    'http://zetictest.com',
    'https://zetictest.ru',
]

ADMINS = [('Alexey Rodin', 'bomvendador@yandex.ru')]
SERVER_EMAIL = 'info@zetic.ru'
EMAIL_SUBJECT_PREFIX = env('EMAIL_SUBJECT_PREFIX')


# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = 1
# DEBUG = True
DEBUG = int(env('DEBUG'))
API_BEARER = env('API_BEARER')
if DEBUG == 0:
    API_LINK = 'https://console.zetic.ru/api/'
else:
    API_LINK = 'https://demo-admin.zetic.borsky.dev/api/'


# ALLOWED_HOSTS = ['51.250.113.32', '51.250.45.169', 'zetictest.ru', 'zetictest.com', '127.0.0.1', '0.0.0.0']
ALLOWED_HOSTS = ['51.250.45.169', 'zetictest.ru', 'zetictest.com', '127.0.0.1', '0.0.0.0']
# ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")

CORS_ORIGIN_WHITELIST = [
    'http://51.250.113.32',
    'http://51.250.45.169',
    # 'http://zetictest.ru',
    'http://zetictest.com',
    'https://zetictest.ru',
]

# Application definition

INSTALLED_APPS = [
    'django_extensions',
    'django_dia',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'celery',
    'api',
    'pdf',
    'pdf_group',
    'login',
    'panel',
    'sendemail',
    'django_celery_beat'

]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',  # <-- And here
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser'
    ]
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'reports.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
            BASE_DIR / 'login/templates',
            BASE_DIR / 'panel/templates',
            BASE_DIR / 'questionnaire/templates'
        ]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'reports.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

if DEBUG == 1:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'reports',
            'USER': 'db_user',
            'PASSWORD': 'Jiu8yGtyf-=-=',
            'HOST': 'localhost',
            'PORT': '',
            'CHARSET': 'utf8',
            'COLLATION': 'utf8_general_ci',

        }
    }

# Celery Broker - Redis
CELERY_BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = "Europe/Moscow"




# print(os.environ.get('SQL_NAME', BASE_DIR / 'db.sqlite3'))
# print(os.environ.get('SQL_PASSWORD', BASE_DIR / 'db.sqlite3'))
# print(os.environ.get('SQL_ENGINE', 'django.db.backends.sqlite3'))
#
# DATABASES = {
#     'default': {
#         'ENGINE':  os.environ.get('SQL_ENGINE', 'django.db.backends.sqlite3'),
#         'NAME': os.environ.get('SQL_NAME', BASE_DIR / 'db.sqlite3'),
#         'USER': os.environ.get('SQL_USER', BASE_DIR / 'user'),
#         'PASSWORD': os.environ.get('SQL_PASSWORD', 'password'),
#         'HOST': os.environ.get('SQL_HOST', 'localhost'),
#         'PORT': os.environ.get('SQL_PORT', '5432'),
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_root/')

STATICFILES_DIRS = [
    BASE_DIR / "static",
    'login/static/login'
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = 465
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

SECURE_CROSS_ORIGIN_OPENER_POLICY = None
